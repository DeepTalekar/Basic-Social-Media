name: Build and Deploy Code

on:
  # push:
  #   branches: ['main']
  # pull_request:
  #   branches: ['main']
  schedule:
    - cron: '23 11 * * *'
    - cron: '23 11 * * *'

jobs:
  build:
    environment:
      name: 'Testing'
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest

    steps:
      - name: Pulling Git Repo
        uses: actions/checkout@v3
      - name: Install Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          architecture: 'x64'
      - name: Update pip
        if: github.event.schedule != '23 11 * * *'
        run: python -m pip install --upgrade pip
      - name: Installing all dependencies
        if: github.event.schedule != '23 11 * * *'
        run: pip install -r requirements.txt
      - name: Test with pytest
        if: github.event.schedule != '23 11 * * *'
        run: pytest

      # Docker Image
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{secrets.DOCKER_HUB_USERNAME}}
      #     password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1
      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     builder: ${{ steps.buildx.outputs.name }}
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/basic-social-media:latest
      #     cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/basic-social-media:buildcache
      #     cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/basic-social-media:buildcache,mode=max

  deploy:
    environment:
      name: Production
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Pulling Git Repo
        uses: actions/checkout@v3
      # - name: Deploying to Heroku
      #   uses: akhileshns/heroku-deploy@v3.12.12
      #   with:
      #     heroku_api_key: ${{secrets.HEROKU_API_KEY}}
      #     heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
      #     heroku_email: ${{secrets.HEROKU_EMAIL}}
      - name: Deploying to Railway
        if: github.event.schedule != '23 11 * * *'
        run: railway up -s ${secrets.RAILWAY_SERVICE}
        env:
          RAILWAY_TOKEN: ${{secrets.RAILWAY_TOKEN}}
        

  shutdown:
    environment:
      name: Production
    runs-on: ubuntu-latest
    # needs: [deploy]
    steps:
      - name: Shutting down the production
        if: github.event.schedule != '26 11 * * *'
        run: railway down --yes
        env:
          RAILWAY_TOKEN: ${{secrets.RAILWAY_TOKEN}}
